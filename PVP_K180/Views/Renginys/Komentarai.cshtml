@model PVP_K180.ModelView.KomentaroLangasRenginys

@{
    ViewBag.Title = "Komentarai";
}


<style>
    .borderless td, .borderless th {
        border: none;
    }

    .boxShadow2 {
        box-shadow: 0 1px 5px rgb(0 0 0 / 0.2);
        margin: auto;
        border-radius: 4px;
        width: 100%;
        padding: 10px;
        margin-top: 10px;
        position: relative;
        background-color: white;
    }

    .textarea {
        -ms-box-sizing: border-box;
        box-sizing: border-box;
        display: block;
        border: 3px solid silver;
        width: 50%;
        font-size: 15px;
        line-height: 20px;
        min-height: 70px;
    }
</style>
<h2>Komentarai</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal boxShadow2">
    @if (TempData["SuccsessComment"] != null)
    {
        <p class="alert alert-success" id="successMessage">@Convert.ToString(TempData["SuccsessComment"])</p>
    }
    @if (TempData["DeleteSucc"] != null)
    {
        <p class="alert alert-success" id="successMessage">@Convert.ToString(TempData["DeleteSucc"])</p>
    }
    @if (TempData["DeleteFail"] != null)
    {
        <p class="alert alert-danger" id="successMessage">@Convert.ToString(TempData["DeleteFail"])</p>
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @if (Session["UserID"] != null)
    {
        <div style="">
            <div>
                <h4 style="color:lightgray">Komentaras</h4>
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.rasomasKomentaras.komentaro_tekstas, new { htmlAttributes = new { @class = "textarea", @type="text" } })
                    @Html.ValidationMessageFor(model => model.rasomasKomentaras.komentaro_tekstas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div style="margin-top:5px;margin-left:15px;" class="col-md-10">
                    <input type="submit" value="Rašyti" class="btn btn-default" />
                </div>
            </div>



            

        </div>
    }
    <link rel="stylesheet" href="~/Styles/comment.css" />
    <div class="comments-container">
        <ul id="comments-list" class="comments-list">
            <li>
                @foreach (var item in Model.parasytiKomentarai)
                {

                    <div class="comment-main-level">
                        <!-- Avatar -->
                        <div class="comment-avatar"><img src="~/Nuotraukos/@item.nuotrauka_location" alt=""></div>
                        <!-- Content -->
                        <div class="comment-box">
                            <div class="comment-head">
                                <h6 class="comment-name by-author"><a href="@(@Url.Action("ProfilioPerziura", "Vartotojas", new { id = item.fk_Vartotojasid_Vartotojas }))">@item.varotojo_slapyvardis</a></h6>
                                <span>@item.parasymo_data.ToString("yyyy-MM-dd")</span>
                                @if (Convert.ToInt32(Session["UserID"]) == item.fk_Vartotojasid_Vartotojas)
                                {
                                    <i class="fa fa-reply"><a href="@(@Url.Action("TrintiKomentara", "Renginys", new { id = item.id_Komentaras }))">Trint komentarą</a></i>
                                }
                                <i class="fa fa-heart"></i>
                            </div>
                            <div class="comment-content">
                                @item.komentaro_tekstas
                            </div>
                        </div>
                    </div>
                <li></li>
                }
            </ul>
        </div>
    </div>}
<div class="row" style="margin-top: 2vh; margin-left: 0px; float: left; margin-bottom:2vh;">
    @Html.ActionLink("< Atgal", "PerziuretiRengini", "Renginys", new { id = Convert.ToInt32(Session["RenginioID"]) }, new { @class = "btn btn-info ", @type = "button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
